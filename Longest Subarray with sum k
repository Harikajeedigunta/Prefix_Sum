C++ Code:
Method 1: Brute Force
#include<iostream>
#include<vector>
using namespace std;
int main()
{
    int n,k;
    cin>>n>>k;
    vector<int>v(n);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    int longest=0;
    for(int i=0;i<n;i++)
    {
       int sum=0;
       for(int j=i;j<n;j++)
       {
           sum+=v[j];
           if(sum==k)
           {
               longest=max(longest,j-i+1);
           }
       }
    }
    cout<<longest;
}

Method 2:Using Prefix_sum
#include<iostream>
#include<vector>
#include<unordered_map>
using namespace std;
int main()
{
    int n,k;
    cin>>n>>k;
    vector<int>v(n);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    unordered_map<int,int>prefix_map;
    int sum=0,longest=0;
    for(int i=0;i<n;i++)
    {
        sum+=v[i];
        if(sum==k)
        {
            longest=i+1;
        }
        if(prefix_map.find(sum-k)!=prefix_map.end())
        {
            longest=max(longest,i-prefix_map[sum-k]);
        }
        if(prefix_map.find(sum)==prefix_map.end())
        {
            prefix_map[sum]=i;
        }
    }
    cout<<longest;
    return 0;
}

Input:
6 5
1 2 3 2 1 1

Output:
2
